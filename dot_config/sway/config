# vim:foldmethod=marker
#

# Variables --------------------------- {{{

set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $term alacritty

set $menu nwggrid -o 0.90 -b '#000000'

set $gnome-schema org.gnome.desktop.interface
set $exec exec --no-startup-id exec fish

# set $wobcmd wob -b 0 -p 0 -H 15 -o 6 --background-color '#CF000000' --bar-color '#FA1AFB96'
set $wobcmd ''

set $shot $HOME/.scripts/grimshot --notify

set $altab $HOME/.config/sway/scripts/altab.py
set $volume $HOME/.config/sway/scripts/vol.sh

set $cl_high #252A2F
set $cl_indi #FA2573
set $cl_back #151A1F
set $cl_fore #393E43
set $cl_forh #FAFAFA
set $cl_urge #ee2e24

#}}}

# Autostart --------------------------- {{{
#
    # Wallpaper
    exec ~/.azotebg

    # Notification daemon
    exec mako

    # KDE connect
    exec {
        /usr/lib/kdeconnectd
        kdeconnect-indicator
    }

    # Network tray icon
    #exec nm-applet --indicator

    # GTK theme
    # exec_always {
    #     gsettings set $gnome-schema gtk-theme 'WhiteSur-dark-solid-alt'
    #     gsettings set $gnome-schema icon-theme 'Win10Sur-black-dark'
    #     gsettings set $gnome-schema cursor-theme 'default'
    #     gsettings set $gnome-schema font-name 'Noto Sans Display'
    # }
    exec /usr/lib/gsd-xsettings

    # Progress csd
    # exec_always {
    #     # End previous wob pipes
    #     killall tail
    #     mkfifo $SWAYSOCK.wob
    #     while $(pgrep tail); do sleep 1; done
    #     tail -f $SWAYSOCK.wob | $wobcmd
    # }
#}}}

# Output configuration -------------- {{{
# eDP ----------------------- {{{2
#
    # Reset scale
    output * scale 1
    # Set subpixel rendering
    output * subpixel rgb
# HDMI ---------------------- {{{2
    # TODO
# Example ------------------- {{{2
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
#}}}
#}}}

# Idle configuration ------------------ {{{
# Example ------------------- {{{
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# }}}
# }}}

# Input configuration ----------------- {{{

# Touchpad tap to click
input type:touchpad tap enable

input "type:keyboard" {
    xkb_layout us
    # Swap `CapsLock` with `Esc`
    xkb_options caps:swapescape
    # faster key repetitions
    repeat_rate 60
    repeat_delay 300
}

# Example ------------------- {{{
#
#   input "1267:12377:ELAN1300:00_04F3:3059_Touchpad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
#}}}
#}}}

# Key bindings ------------------------ {{{
#
# Special keys -------------- {{{
#
    # Volume
    bindsym XF86AudioRaiseVolume exec $volume + && $volume = > $SWAYSOCK.wob
    bindsym XF86AudioLowerVolume exec $volume - && $volume = > $SWAYSOCK.wob
    bindsym XF86AudioMute        exec $volume x

    bindsym $mod+m               exec "pactl set-source-mute @DEFAULT_SOURCE@ toggle"

    # Brightness
    bindsym XF86MonBrightnessUp   exec brightnessctl -c backlight set 5%+
    bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 5%-
    # Print
    bindsym print exec $shot copy output
    bindsym Shift+print exec $shot out area | swappy -f -
    bindsym Control+print exec $shot copy area
#}}}
# Basics -------------------- {{{
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
# }}}
# Moving around ------------- {{{
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
# }}}
# Workspaces ---------------- {{{
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    # Move to next workspace
    bindsym $mod+comma workspace prev_on_output
    bindsym $mod+period workspace next_on_output

    bindsym $mod+tab workspace back_and_forth next_on_output
    bindsym $mod+Shift+tab workspace back_and_forth prev_on_output

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
# }}}
# Layout stuff -------------- {{{
#
    # Toggle waybar
    bindsym $mod+x pkill -USR1 waybar
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+Shift+t layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle
# }}}
# Scratchpad ---------------- {{{
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#}}}
# Resizing containers ------- {{{
#
    bindsym $mod+Control+Right resize grow width 5px
    bindsym $mod+Control+Left resize shrink width 5px
    bindsym $mod+Control+Up resize shrink height 5px
    bindsym $mod+Control+Down resize grow height 5px

    bindsym $mod+Control+$right resize grow width 5px
    bindsym $mod+Control+$left resize shrink width 5px
    bindsym $mod+Control+$up resize shrink height 5px
    bindsym $mod+Control+$down resize grow height 5px
#}}}
    bindsym Mod1+tab exec $altab next
    bindsym Mod1+shift+tab exec $altab prev
# }}}

# Rules ------------------------------- {{{
for_window [title="Azote~"] floating enable
for_window [class="feh"] floating enable
for_window [class="vlc"] floating enable
for_window [app_id="floatty"] floating enable
for_window [app_id="ulauncher"] border none
#}}}

# Status Bar -------------------------- {{{

bar {
    swaybar_command waybar
}

# Example ------------------- {{{
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top

# When the status_command prints a new line to stdout, swaybar updates.
# The default just shows the current date and time.

#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}
#}}}
#}}}

# Appearance -------------------------- {{{1
font pango:Office Code Pro Medium 9

# Gaps ---------------------- {{{2
#
    gaps inner 4
    gaps outer 1
# Borders -------------- {{{2
#
  #hide_edge_borders smart

  default_border pixel 1
  title_align center

  # Colors                border   bg       text     indi     childborder
  client.focused          $cl_high $cl_high $cl_forh $cl_indi $cl_high
  client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
  client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
  client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge


# Borders ------------------- {{{2
#
#    border_images.focused ~/.config/sway/borders/focused.png
#    border_images.focused_inactive ~/.config/sway/borders/unfocused.png
#    border_images.unfocused ~/.config/sway/borders/unfocused.png
#    border_images.urgent ~/.config/sway/borders/focused.png
#}}}
#}}}

# External ---------------------------- {{{1
include @sysconfdir@/sway/config.d/*
#}}}


